Approche prompt engineering ğŸ’­
------------------------

Dans le cadre de notre projet, nous devrons trouver une technique de prompte
engineering Ã©fficace pour pouvoir gÃ©nÃ©rer notre table en se basant sur lâ€™input de
lâ€™utilisateur.
Pour cela, nous avons optÃ© pour le one-shot, car notre modÃ¨le Ã©tant dÃ©jÃ  trÃ¨s
performant, nâ€™avait pas besoin de beaucoup dâ€™exemple pour comprendre la tÃ¢che Ã 
rÃ©aliser. Voici la structure de notre prompt
SystÃ¨me : Il sâ€™agit des instructions fournies au modÃ¨le concernant son comportement et la maniÃ¨re dont il devrait se percevoir.
Exemple : Câ€™est une illustration de prompt complÃ©tion servant de rÃ©fÃ©rence
pour le modÃ¨le lors de la gÃ©nÃ©ration de ses rÃ©ponses. Il est composÃ© de deux parties :
â€” UserContent : Exemple de lâ€™entrÃ©e utilisateur.
â€” ModelResponse : Un exemple de rÃ©ponse idÃ©ale que le modÃ¨le est censÃ©
produire.
ComplÃ©tion : Câ€™est la rÃ©ponse du modÃ¨le Ã  la requÃªte de lâ€™utilisateur, prenant
en considÃ©ration non seulement son prompt initial, mais Ã©galement lâ€™exemple de
prompt fourni dans le contexte, ainsi que les instructions spÃ©cifiÃ©es au niveau du
systÃ¨me. Le processus est resumÃ© dans cette figure:

.. image:: ../images/completion_diagram.png
    :width: 100%
    :align: center
    :alt: completion_diagram
..
